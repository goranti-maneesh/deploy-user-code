{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/moviesApp/src/Components/FilterEmploymentType/index.js\";\nimport { Component } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst employmentTypesList = [{\n  label: 'Full Time',\n  employmentTypeId: 'FULLTIME'\n}, {\n  label: 'Part Time',\n  employmentTypeId: 'PARTTIME'\n}, {\n  label: 'Freelance',\n  employmentTypeId: 'FREELANCE'\n}, {\n  label: 'Internship',\n  employmentTypeId: 'INTERNSHIP'\n}];\nclass FilterEmploymentType extends Component {\n  constructor(...args) {\n    super(...args);\n    this.getEmpTypeList = () => employmentTypesList.map(eachItem => {\n      const {\n        employmentSelected\n      } = this.props;\n      const onChangeEmpType = event => employmentSelected(event.target.value);\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        onChange: onChangeEmpType,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"emp-check-box\",\n          type: \"checkbox\",\n          id: eachItem.employmentTypeId,\n          name: eachItem.employmentTypeId,\n          value: eachItem.employmentTypeId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"emp-type-lable\",\n          htmlFor: eachItem.employmentTypeId,\n          children: eachItem.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, eachItem.employmentTypeId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.getEmpTypeList()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default FilterEmploymentType;","map":{"version":3,"names":["Component","jsxDEV","_jsxDEV","employmentTypesList","label","employmentTypeId","FilterEmploymentType","constructor","args","getEmpTypeList","map","eachItem","employmentSelected","props","onChangeEmpType","event","target","value","onChange","children","className","type","id","name","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","render"],"sources":["/home/workspace/reactjs/coding-practices/moviesApp/src/Components/FilterEmploymentType/index.js"],"sourcesContent":["import {Component} from 'react'\nimport './index.css'\n\nconst employmentTypesList = [\n  {\n    label: 'Full Time',\n    employmentTypeId: 'FULLTIME',\n  },\n  {\n    label: 'Part Time',\n    employmentTypeId: 'PARTTIME',\n  },\n  {\n    label: 'Freelance',\n    employmentTypeId: 'FREELANCE',\n  },\n  {\n    label: 'Internship',\n    employmentTypeId: 'INTERNSHIP',\n  },\n]\n\nclass FilterEmploymentType extends Component {\n  getEmpTypeList = () =>\n    employmentTypesList.map(eachItem => {\n      const {employmentSelected} = this.props\n      const onChangeEmpType = event => employmentSelected(event.target.value)\n\n      return (\n        <li key={eachItem.employmentTypeId} onChange={onChangeEmpType}>\n          <input\n            className=\"emp-check-box\"\n            type=\"checkbox\"\n            id={eachItem.employmentTypeId}\n            name={eachItem.employmentTypeId}\n            value={eachItem.employmentTypeId}\n          />\n          <label className=\"emp-type-lable\" htmlFor={eachItem.employmentTypeId}>\n            {eachItem.label}\n          </label>\n        </li>\n      )\n    })\n\n  render() {\n    return <div>{this.getEmpTypeList()}</div>\n  }\n}\n\nexport default FilterEmploymentType\n"],"mappings":";AAAA,SAAQA,SAAS,QAAO,OAAO;AAC/B,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,mBAAmB,GAAG,CAC1B;EACEC,KAAK,EAAE,WAAW;EAClBC,gBAAgB,EAAE;AACpB,CAAC,EACD;EACED,KAAK,EAAE,WAAW;EAClBC,gBAAgB,EAAE;AACpB,CAAC,EACD;EACED,KAAK,EAAE,WAAW;EAClBC,gBAAgB,EAAE;AACpB,CAAC,EACD;EACED,KAAK,EAAE,YAAY;EACnBC,gBAAgB,EAAE;AACpB,CAAC,CACF;AAED,MAAMC,oBAAoB,SAASN,SAAS,CAAC;EAAAO,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC3CC,cAAc,GAAG,MACfN,mBAAmB,CAACO,GAAG,CAACC,QAAQ,IAAI;MAClC,MAAM;QAACC;MAAkB,CAAC,GAAG,IAAI,CAACC,KAAK;MACvC,MAAMC,eAAe,GAAGC,KAAK,IAAIH,kBAAkB,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MAEvE,oBACEf,OAAA;QAAoCgB,QAAQ,EAAEJ,eAAgB;QAAAK,QAAA,gBAC5DjB,OAAA;UACEkB,SAAS,EAAC,eAAe;UACzBC,IAAI,EAAC,UAAU;UACfC,EAAE,EAAEX,QAAQ,CAACN,gBAAiB;UAC9BkB,IAAI,EAAEZ,QAAQ,CAACN,gBAAiB;UAChCY,KAAK,EAAEN,QAAQ,CAACN;QAAiB;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACFzB,OAAA;UAAOkB,SAAS,EAAC,gBAAgB;UAACQ,OAAO,EAAEjB,QAAQ,CAACN,gBAAiB;UAAAc,QAAA,EAClER,QAAQ,CAACP;QAAK;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA,GAVDhB,QAAQ,CAACN,gBAAgB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAW9B,CAAC;IAET,CAAC,CAAC;EAAA;EAEJE,MAAMA,CAAA,EAAG;IACP,oBAAO3B,OAAA;MAAAiB,QAAA,EAAM,IAAI,CAACV,cAAc,CAAC;IAAC;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3C;AACF;AAEA,eAAerB,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module"}